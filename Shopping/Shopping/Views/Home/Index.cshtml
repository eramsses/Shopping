@model Shopping.Models.HomeViewModel
@{
    ViewData["Title"] = "Inicio";
}

<!--Encabezado de Página-->
<div class="main-header d-flex justify-content-between flex-wrap align-items-center pt-3 pb-2 mb-4 border-bottom ">
    <div class="col-lg-8">
        <h2>Productos</h2>
        <em>Visita nuestros productos y categorías.</em>
    </div>

    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">

            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" class="btn btn-outline-primary"><i class="fa-solid fa-bars-sort"></i> Nombre</a>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" class="btn btn-outline-primary"><i class="fa-solid fa-bars-sort"></i> Precio</a>


            @if (Model.Quantity > 0)
            {
                <a asp-action="ShowCart" class="btn btn-outline-primary position-relative" title="Ver Carrito de Compras">
                    <i class="fa-solid fa-cart-shopping"></i>
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-primary">
                        @Model.Quantity
                    </span>
                </a>
            }
        </div>
    </div>
</div>
<div class="d-flex justify-content-between align-items-start">
    <div class="mt-4">
        @foreach (var item in Model.Categories)
        {
            <span>@item.Name&nbsp;&nbsp;</span>
        }
    </div>
    <div class="mb-2">
        <form asp-action="Index" method="get">
            <div class="form-actions no-color">
                <p>

                    <div class="input-group mb-4">
                        <input type="text" class="form-control" placeholder="Buscar..." aria-label="Recipient's username" aria-describedby="button-addon2" name="SearchString" value="@ViewData["CurrentFilter"]" />
                        <button class="btn btn-outline-secondary" type="submit" id="button-addon2">Buscar</button>
                        <a asp-action="Index" class="btn btn-secondary">Ver Todo</a>
                    </div>

                </p>
            </div>
        </form>
    </div>
</div>

<div class="d-flex flex-wrap justify-content-evenly">
    @if (Model.Products.Count() > 0)
    {
        @foreach (var item in Model.Products)
        {
            <div class="shop-card text-center d-flex flex-column">
                <div class="shop-card-title">
                    <h2>@item.Name </h2>
                </div>
                <div class="shop-card-body">
                    <div class="zoom">
                        <img src="@item.ImageFullPath" style="width:180px;" />
                    </div>
                    <p class="card-text">@item.Description.</p>
                    <h4>@Html.DisplayFor(modelItem => item.Price)</h4>
                </div>
                <div class="shop-card-foot">

                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-secondary">Detalles</a>
                    <a asp-action="Add" asp-route-id="@item.Id" class="btn btn-primary">Agregar</a>
                </div>
            </div>
        }

    }
    else
    {
        <h1>No se encontraron productos en su criterio de búsqueda</h1>
    }
</div>
<hr />

@{
    var prevDisabled = !Model.Products.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Products.HasNextPage ? "disabled" : "";
}
<div class="d-flex justify-content-end">
    <div class="mt-1 mb-5">
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.Products.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-secondary @prevDisabled">
            Anterior
        </a>
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.Products.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-secondary @nextDisabled">
            Siguiente
        </a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
